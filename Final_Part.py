def Create_List_num(Seq_List):
    Num = {}
    Name_List = list(Seq_List.keys())
    count = 0
    for i in range(len(Name_List)):
        for j in range(i+1,len(Name_List)):
            Num[Name_List[i]+Name_List[j]] = count
            count += 1
    '''
    for i in Order_List:
        if i == ['-', '-']:
        elif (i[0] == '-') & (i[1] != '-'):
        else:
            seq1 = Seq_List[i[0]]
            seq2 = Seq_List[i[1]]
    '''
    return Num

def Create_S_List(S_List,Sequence_Weight):
    SS = list(Sequence_Weight.values())
    LEN = 0
    for i in S_List:
        LEN = max(LEN,len(i),len(i[0]))
    Final_S = [[0 for i in range(LEN)] for j in range(LEN)]
    for i in range(LEN):
        for j in range(LEN):
            for k in range(len(S_List)):
                try:
                    Final_S[i][j] += S_List[k][i][j] * SS[k]
                except IndexError:
                    continue
    return Final_S


'''
OL = [['S1', 'S2'], ['-', 'S3'], ['-', 'S4']]
SW = {'S1': 0.21800000000000003, 'S2': 0.106, 'S3': 0.29200000000000004, 'S4': 0.222}
SL = {'S1': 'PYRFTIKSM', 'S2':'PYKFSIKSM' , 'S3': 'PYMYSSESM', 'S4': 'PMDDNPFSFQSM'}
S_L = [[[0, -2, -4, -6, -8, -10, -12, -14, -16, -18], [-2, 1, -1, -3, -5, -7, -9, -11, -13, -15], [-4, -1, 2, 0, -2, -4, -6, -8, -10, -12], [-6, -3, 0, 1, -1, -3, -5, -5, -7, -9], [-8, -5, -2, -1, 2, 0, -2, -4, -6, -8], [-10, -7, -4, -3, 0, 1, -1, -3, -3, -5], [-12, -9, -6, -5, -2, -1, 2, 0, -2, -4], [-14, -11, -8, -7, -4, -3, 0, 3, 1, -1], [-16, -13, -10, -9, -6, -5, -2, 1, 4, 2], [-18, -15, -12, -11, -8, -7, -4, -1, 2, 5]], [[0, -2, -4, -6, -8, -10, -12, -14, -16, -18], [-2, 1, -1, -3, -5, -7, -9, -11, -13, -15], [-4, -1, 2, 0, -2, -4, -6, -8, -10, -12], [-6, -3, 0, 1, -1, -3, -5, -7, -9, -9], [-8, -5, -2, -1, 0, -2, -4, -6, -8, -10], [-10, -7, -4, -3, -2, -1, -3, -5, -5, -7], [-12, -9, -6, -5, -4, -3, -2, -4, -4, -6], [-14, -11, -8, -7, -6, -5, -4, -3, -5, -5], [-16, -13, -10, -9, -8, -7, -6, -5, -2, -4], [-18, -15, -12, -11, -10, -9, -8, -7, -4, -1]], [[0, -2, -4, -6, -8, -10, -12, -14, -16, -18], [-2, 1, -1, -3, -5, -7, -9, -11, -13, -15], [-4, -1, 0, -2, -4, -6, -8, -10, -12, -12], [-6, -3, -2, -1, -3, -5, -7, -9, -11, -13], [-8, -5, -4, -3, -2, -4, -6, -8, -10, -12], [-10, -7, -6, -5, -4, -3, -5, -7, -9, -11], [-12, -9, -8, -7, -6, -5, -4, -6, -8, -10], [-14, -11, -10, -9, -6, -7, -6, -5, -7, -9], [-16, -13, -12, -11, -8, -7, -8, -7, -4, -6], [-18, -15, -14, -13, -10, -9, -8, -9, -6, -5], [-20, -17, -16, -15, -12, -11, -10, -9, -8, -7], [-22, -19, -18, -17, -14, -13, -12, -11, -8, -9], [-24, -21, -20, -19, -16, -15, -14, -13, -10, -7]], [[0, -2, -4, -6, -8, -10, -12, -14, -16, -18], [-2, 1, -1, -3, -5, -7, -9, -11, -13, -15], [-4, -1, 2, 0, -2, -4, -6, -8, -10, -12], [-6, -3, 0, 1, -1, -3, -5, -7, -9, -9], [-8, -5, -2, -1, 0, -2, -4, -6, -8, -10], [-10, -7, -4, -3, -2, 1, -1, -3, -5, -7], [-12, -9, -6, -5, -4, -1, 0, -2, -2, -4], [-14, -11, -8, -7, -6, -3, -2, -1, -3, -3], [-16, -13, -10, -9, -8, -5, -4, -3, 0, -2], [-18, -15, -12, -11, -10, -7, -6, -5, -2, 1]], [[0, -2, -4, -6, -8, -10, -12, -14, -16, -18], [-2, 1, -1, -3, -5, -7, -9, -11, -13, -15], [-4, -1, 0, -2, -4, -6, -8, -10, -12, -12], [-6, -3, -2, -1, -3, -5, -7, -9, -11, -13], [-8, -5, -4, -3, -2, -4, -6, -8, -10, -12], [-10, -7, -6, -5, -4, -3, -5, -7, -9, -11], [-12, -9, -8, -7, -6, -5, -4, -6, -8, -10], [-14, -11, -10, -9, -6, -7, -6, -5, -7, -9], [-16, -13, -12, -11, -8, -5, -7, -7, -4, -6], [-18, -15, -14, -13, -10, -7, -6, -8, -6, -5], [-20, -17, -16, -15, -12, -9, -8, -7, -8, -7], [-22, -19, -18, -17, -14, -11, -10, -9, -6, -8], [-24, -21, -20, -19, -16, -13, -12, -11, -8, -5]], [[0, -2, -4, -6, -8, -10, -12, -14, -16, -18], [-2, 1, -1, -3, -5, -7, -9, -11, -13, -15], [-4, -1, 0, 0, -2, -4, -6, -8, -10, -12], [-6, -3, -2, -1, -1, -3, -5, -7, -9, -11], [-8, -5, -4, -3, -2, -2, -4, -6, -8, -10], [-10, -7, -6, -5, -4, -3, -3, -5, -7, -9], [-12, -9, -8, -7, -6, -5, -4, -4, -6, -8], [-14, -11, -10, -9, -8, -7, -6, -5, -5, -7], [-16, -13, -12, -11, -10, -7, -6, -7, -4, -6], [-18, -15, -14, -13, -12, -9, -8, -7, -6, -5], [-20, -17, -16, -15, -14, -11, -10, -9, -8, -7], [-22, -19, -18, -17, -16, -13, -10, -11, -8, -9], [-24, -21, -20, -17, -18, -15, -12, -11, -10, -7]]]
P_L = [[[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], 5, 7], [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], -1, 4], [[0, 0], [1, 1], [2, 1], [3, 1], [4, 1], [5, 2], [6, 3], [7, 4], [8, 5], [9, 6], [10, 7], [11, 8], [12, 9], -7, 4], [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], 1, 5], [[0, 0], [1, 1], [2, 1], [3, 1], [4, 1], [5, 2], [6, 3], [7, 4], [8, 5], [9, 6], [10, 7], [11, 8], [12, 9], -5, 5], [[0, 0], [1, 1], [2, 1], [3, 1], [4, 1], [5, 2], [6, 3], [7, 4], [8, 5], [9, 6], [10, 7], [11, 8], [12, 9], -7, 4]]
Create_S_List(S_L,SW)
'''


